package InferfazUsuario;

import ModuloControl.DlgSeleccionPaciente;
import ModuloControl.Control;
import ModuloControl.ControlFaçade;
import interfaces.IControl;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import objetosNegocio.Paciente;

/**
 *
 * @author Ariiel AB
 */
public class FrmReceta extends javax.swing.JFrame {

    IControl controlFacade = ControlFaçade.getInstance();

    /**
     * Creates new form FrmUsuario
     */
    public FrmReceta() {
        initComponents();
        centraVentana();

    }

    private void centraVentana() {
        //Obtiene el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Obtiene el tamaño de la ventana de la aplicación
        Dimension frameSize = getSize();

        // Se asegura que el tamaño de la ventana de la aplicación
        // no exceda el tamaño de la pantalla
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }

        // Centra la ventana de la aplicación sobre la pantalla
        setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consultaBotonIcon = new javax.swing.JLabel();
        verConsultasBotonIcon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        consultaMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        consultaBotonIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/consulta.png"))); // NOI18N
        consultaBotonIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultaBotonIconMouseClicked(evt);
            }
        });

        verConsultasBotonIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/registroConsultas.png"))); // NOI18N
        verConsultasBotonIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verConsultasBotonIconMouseClicked(evt);
            }
        });

        jLabel1.setText("Realizar una Consulta");

        jLabel2.setText("Ver registro de Consultas");

        fileMenu.setMnemonic('f');
        fileMenu.setText("Consulta");

        consultaMenuItem.setMnemonic('o');
        consultaMenuItem.setText("Nueva consulta");
        consultaMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consultaMenuItemMouseClicked(evt);
            }
        });
        consultaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(consultaMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Salir");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consultaBotonIcon)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(verConsultasBotonIcon)
                    .addComponent(jLabel2))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(consultaBotonIcon)
                    .addComponent(verConsultasBotonIcon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void consultaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaMenuItemActionPerformed
try{
        while (true) {
            StringBuffer respuesta = new StringBuffer("");
            DlgBuscarPaciente dialog = new DlgBuscarPaciente(this, "Buscar Paciente", respuesta);
            dialog.setVisible(true);
            if (respuesta.toString().equals("Aceptar")) {
               
                if (!controlFacade.getListaPacientes().isEmpty()) {
                    respuesta = new StringBuffer("");
                    DlgSeleccionPaciente dlgSeleccion = new DlgSeleccionPaciente(this, "Seleccione al paciente", respuesta);
                    dlgSeleccion.setVisible(true);
                    if (respuesta.toString().equals("Aceptar")) {
                        respuesta = new StringBuffer("");
                        controlFacade.muestraReceta(this, respuesta, dlgSeleccion.getPaciente());
                        if (respuesta.toString().equals("Aceptar")) {
                            respuesta = new StringBuffer("");
                            controlFacade.imprime(this, respuesta);
                        }
                    } else {

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se enontró ninguna coincidencia en la base de datos.");

                }

            } else {
                break;
            }
        
        }
}catch(SQLException e){
    
}
    }/*
        dialog.setVisible(true);    }//GEN-LAST:event_consultaMenuItemActionPerformed
*/
    private void consultaMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultaMenuItemMouseClicked

    }//GEN-LAST:event_consultaMenuItemMouseClicked

    private void consultaBotonIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consultaBotonIconMouseClicked
        while (true) {
            StringBuffer respuesta = new StringBuffer("");
            try{
            DlgBuscarPaciente dialog = new DlgBuscarPaciente(this, "Buscar Paciente", respuesta);
            dialog.setVisible(true);
            if(respuesta.toString().equals("EX"))
                throw  new SQLException();
            if (respuesta.toString().equals("Aceptar")) {
                
                if (!controlFacade.getListaPacientes().isEmpty()) {
                    respuesta = new StringBuffer("");
                    DlgSeleccionPaciente dlgSeleccion = new DlgSeleccionPaciente(this, "Seleccione al paciente", respuesta);
                    dlgSeleccion.setVisible(true);
                    if (respuesta.toString().equals("Aceptar")) {
                        respuesta = new StringBuffer("");
                        
                        
                        controlFacade.muestraReceta(this, respuesta, dlgSeleccion.getPaciente());
                        if (respuesta.toString().equals("Aceptar")) {
                            respuesta = new StringBuffer("");
                            controlFacade.imprime(this, respuesta);
                            break;
                        }
                    } 
                } else {
                     JOptionPane.showMessageDialog(this, "No se enontró ninguna coincidencia en la base de datos.");
                    
                }
                

            } else {
                break;
            }
            }catch(SQLException e){
               
                JOptionPane.showMessageDialog(this, "ERROR: No se pudo conectar a la base de datos externa.");
    
            }catch(NullPointerException e){
                JOptionPane.showMessageDialog(this, "ERROR: No se pudo conectar a la base de datos externa.");
            }
        }
        controlFacade.setControl(new Control());

        // TODO add your handling code here:
    }//GEN-LAST:event_consultaBotonIconMouseClicked

    private void verConsultasBotonIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verConsultasBotonIconMouseClicked
      while (true) {
            StringBuffer respuesta = new StringBuffer("");
            try{
            DlgBuscarPaciente dialog = new DlgBuscarPaciente(this, "Buscar Paciente", respuesta);
            dialog.setVisible(true);
            if(respuesta.toString().equals("EX"))
                throw  new SQLException();
            if (respuesta.toString().equals("Aceptar")) {
                
                if (!controlFacade.getListaPacientes().isEmpty()) {
                    respuesta = new StringBuffer("");
                    DlgSeleccionPaciente dlgSeleccion = new DlgSeleccionPaciente(this, "Seleccione al paciente", respuesta);
                    dlgSeleccion.setVisible(true);
                    if (respuesta.toString().equals("Aceptar")) {
                        respuesta = new StringBuffer("");
                        
                        DlgConsultasPaciente dlgPaciente = new DlgConsultasPaciente(this,false, controlFacade.getListaConsultas(dlgSeleccion.getPaciente()));
                        dlgPaciente.setVisible(true);
                                                
                        
                        
                        if (respuesta.toString().equals("Aceptar")) {
                            respuesta = new StringBuffer("");
                            break;
                        }
                    } 
                } else {
                     JOptionPane.showMessageDialog(this, "No se enontró ninguna coincidencia en la base de datos.");
                    
                }
                

            } else {
                break;
            }
            }catch(SQLException e){
               
                JOptionPane.showMessageDialog(this, "ERROR: No se pudo conectar a la base de datos externa.");
    
            }catch(NullPointerException e){
                JOptionPane.showMessageDialog(this, "ERROR: No se pudo conectar a la base de datos externa.");
            }
        }
        controlFacade.setControl(new Control());  // TODO add your handling code here:
    }//GEN-LAST:event_verConsultasBotonIconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmReceta().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel consultaBotonIcon;
    private javax.swing.JMenuItem consultaMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel verConsultasBotonIcon;
    // End of variables declaration//GEN-END:variables

}
